/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import settings.Settings;


/**
 *
 * @author ayaab
 */
public class DatabaseIntializer {

    public static String createDatabaseQuery = "--\n"
//            + "-- PostgreSQL database dump\n"
//            + "--\n"
//            + "\n"
//            + "-- Dumped from database version 13.4\n"
//            + "-- Dumped by pg_dump version 13.4\n"
//            + "\n"
//            + "SET statement_timeout = 0;\n"
//            + "SET lock_timeout = 0;\n"
//            + "SET idle_in_transaction_session_timeout = 0;\n"
//            + "SET client_encoding = 'SQL_ASCII';\n"
//            + "SET standard_conforming_strings = on;\n"
//            + "SELECT pg_catalog.set_config('search_path', '', false);\n"
//            + "SET check_function_bodies = false;\n"
//            + "SET xmloption = content;\n"
//            + "SET client_min_messages = warning;\n"
//            + "SET row_security = off;\n"
//            + "\n"
//            + "--\n"
//            + "-- Name: "+Settings.databaseName+"; Type: DATABASE; Schema: -; Owner: postgres\n"
//            + "--\n"
//            + "\n"
//            + "CREATE DATABASE "+Settings.databaseName+" WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'English_Canada.1252';\n"
//            + "\n"
//            + "\n"
//            + "ALTER DATABASE "+Settings.databaseName+" OWNER TO postgres;\n"
//            + "\n"
//            + "\\connect "+Settings.databaseName+"\n"
//            + "\n"
//            + "SET statement_timeout = 0;\n"
//            + "SET lock_timeout = 0;\n"
//            + "SET idle_in_transaction_session_timeout = 0;\n"
//            + "SET client_encoding = 'SQL_ASCII';\n"
//            + "SET standard_conforming_strings = on;\n"
//            + "SELECT pg_catalog.set_config('search_path', '', false);\n"
//            + "SET check_function_bodies = false;\n"
//            + "SET xmloption = content;\n"
//            + "SET client_min_messages = warning;\n"
//            + "SET row_security = off;\n"
//            + "\n"
//            + "SET default_tablespace = '';\n"
//            + "\n"
//            + "SET default_table_access_method = heap;\n"
//            + "\n"
//            + "--\n"
//            + "-- Name: NP_O_S; Type: TABLE; Schema: public; Owner: postgres\n"
//            + "--\n"
//            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"NP_O_S\" (\n"
            + "    \"PredicateURI\" character varying(200) NOT NULL,\n"
            + "    \"Context_Subject\" character varying(200) NOT NULL,\n"
            + "    \"Context_Object\" character varying(200) NOT NULL,\n"
            + "    \"NP\" character varying(200) NOT NULL,\n"
            + "    \"labelSimilarity\" double precision,\n"
            + "    confidence integer,\n"
            + "    sentence character varying(5000) NOT NULL,\n"
            + "    \"subjectSimilarity\" double precision,\n"
            + "    \"objectSimilarity\" double precision\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"NP_O_S\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Confident_NP_O_S; Type: VIEW; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE OR REPLACE VIEW public.\"Confident_NP_O_S\" AS\n"
            + " SELECT DISTINCT a.\"PredicateURI\",\n"
            + "    a.\"Context_Subject\",\n"
            + "    a.\"Context_Object\",\n"
            + "    a.\"NP\",\n"
            + "    (a.\"labelSimilarity\" * (c.weight)::double precision) AS conf,\n"
            + "    c.weight\n"
            + "   FROM ((public.\"NP_O_S\" a\n"
            + "     JOIN ( SELECT DISTINCT \"NP_O_S\".\"PredicateURI\",\n"
            + "            \"NP_O_S\".\"Context_Subject\",\n"
            + "            \"NP_O_S\".\"Context_Object\",\n"
            + "            max(\"NP_O_S\".\"labelSimilarity\") AS \"labelSimilarity\"\n"
            + "           FROM public.\"NP_O_S\"\n"
            + "          GROUP BY \"NP_O_S\".\"PredicateURI\", \"NP_O_S\".\"Context_Subject\", \"NP_O_S\".\"Context_Object\") b USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"labelSimilarity\"))\n"
            + "     JOIN ( SELECT DISTINCT \"NP_O_S\".\"PredicateURI\",\n"
            + "            \"NP_O_S\".\"Context_Subject\",\n"
            + "            \"NP_O_S\".\"Context_Object\",\n"
            + "            \"NP_O_S\".\"NP\",\n"
            + "            count(\"NP_O_S\".\"NP\") AS weight\n"
            + "           FROM public.\"NP_O_S\"\n"
            + "          GROUP BY \"NP_O_S\".\"PredicateURI\", \"NP_O_S\".\"Context_Subject\", \"NP_O_S\".\"Context_Object\", \"NP_O_S\".\"NP\") c USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"NP\"))\n"
            + "  ORDER BY (a.\"labelSimilarity\" * (c.weight)::double precision) DESC;\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Confident_NP_O_S\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: NP_S_O; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"NP_S_O\" (\n"
            + "    \"PredicateURI\" character varying(200) NOT NULL,\n"
            + "    \"Context_Subject\" character varying(200) NOT NULL,\n"
            + "    \"Context_Object\" character varying(200) NOT NULL,\n"
            + "    \"NP\" character varying(200) NOT NULL,\n"
            + "    \"labelSimilarity\" double precision,\n"
            + "    confidence integer,\n"
            + "    sentence character varying(5000) NOT NULL,\n"
            + "    \"subjectSimilarity\" double precision,\n"
            + "    \"objectSimilarity\" double precision\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"NP_S_O\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Confident_NP_S_O; Type: VIEW; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE OR REPLACE VIEW public.\"Confident_NP_S_O\" AS\n"
            + " SELECT DISTINCT a.\"PredicateURI\",\n"
            + "    a.\"Context_Subject\",\n"
            + "    a.\"Context_Object\",\n"
            + "    a.\"NP\",\n"
            + "    (a.\"labelSimilarity\" * (c.weight)::double precision) AS conf,\n"
            + "    c.weight\n"
            + "   FROM ((public.\"NP_S_O\" a\n"
            + "     JOIN ( SELECT DISTINCT \"NP_S_O\".\"PredicateURI\",\n"
            + "            \"NP_S_O\".\"Context_Subject\",\n"
            + "            \"NP_S_O\".\"Context_Object\",\n"
            + "            max(\"NP_S_O\".\"labelSimilarity\") AS \"labelSimilarity\"\n"
            + "           FROM public.\"NP_S_O\"\n"
            + "          GROUP BY \"NP_S_O\".\"PredicateURI\", \"NP_S_O\".\"Context_Subject\", \"NP_S_O\".\"Context_Object\") b USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"labelSimilarity\"))\n"
            + "     JOIN ( SELECT DISTINCT \"NP_S_O\".\"PredicateURI\",\n"
            + "            \"NP_S_O\".\"Context_Subject\",\n"
            + "            \"NP_S_O\".\"Context_Object\",\n"
            + "            \"NP_S_O\".\"NP\",\n"
            + "            count(\"NP_S_O\".\"NP\") AS weight\n"
            + "           FROM public.\"NP_S_O\"\n"
            + "          GROUP BY \"NP_S_O\".\"PredicateURI\", \"NP_S_O\".\"Context_Subject\", \"NP_S_O\".\"Context_Object\", \"NP_S_O\".\"NP\") c USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"NP\"))\n"
            + "  ORDER BY (a.\"labelSimilarity\" * (c.weight)::double precision) DESC;\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Confident_NP_S_O\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: VP_O_S; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"VP_O_S\" (\n"
            + "    \"PredicateURI\" character varying(200) NOT NULL,\n"
            + "    \"Context_Subject\" character varying(200) NOT NULL,\n"
            + "    \"Context_Object\" character varying(200) NOT NULL,\n"
            + "    \"VP\" character varying(200) NOT NULL,\n"
            + "    \"labelSimilarity\" double precision,\n"
            + "    confidence integer,\n"
            + "    \"baseVerb\" character varying(50),\n"
            + "    sentence character varying(5000) NOT NULL,\n"
            + "    \"subjectSimilarity\" double precision,\n"
            + "    \"objectSimilarity\" double precision\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"VP_O_S\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Confident_VP_O_S; Type: VIEW; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE OR REPLACE VIEW public.\"Confident_VP_O_S\" AS\n"
            + " WITH vp_conf AS (\n"
            + "         SELECT DISTINCT a.\"Context_Subject\",\n"
            + "            a.\"Context_Object\",\n"
            + "            a.\"PredicateURI\",\n"
            + "            b.\"VP\",\n"
            + "            ((((c.verbcount * a.basecount))::double precision / (100)::double precision) + b.\"labelSimilarity\") AS conf,\n"
            + "            row_number() OVER (PARTITION BY a.\"PredicateURI\", a.\"Context_Subject\", a.\"Context_Object\" ORDER BY (((c.verbcount * a.basecount))::double precision * b.\"labelSimilarity\") DESC) AS rank\n"
            + "           FROM ((( SELECT \"VP_O_S\".\"PredicateURI\",\n"
            + "                    \"VP_O_S\".\"Context_Subject\",\n"
            + "                    \"VP_O_S\".\"Context_Object\",\n"
            + "                    \"VP_O_S\".\"baseVerb\",\n"
            + "                        CASE\n"
            + "                            WHEN (\"VP_O_S\".\"baseVerb\" IS NOT NULL) THEN count(\"VP_O_S\".\"baseVerb\")\n"
            + "                            ELSE (1)::bigint\n"
            + "                        END AS basecount\n"
            + "                   FROM public.\"VP_O_S\"\n"
            + "                  GROUP BY \"VP_O_S\".\"PredicateURI\", \"VP_O_S\".\"Context_Subject\", \"VP_O_S\".\"Context_Object\", \"VP_O_S\".\"baseVerb\") a\n"
            + "             JOIN ( SELECT \"VP_O_S\".\"PredicateURI\",\n"
            + "                    \"VP_O_S\".\"Context_Subject\",\n"
            + "                    \"VP_O_S\".\"Context_Object\",\n"
            + "                    \"VP_O_S\".\"baseVerb\",\n"
            + "                    \"VP_O_S\".\"VP\",\n"
            + "                    \"VP_O_S\".\"labelSimilarity\",\n"
            + "                    \"VP_O_S\".\"subjectSimilarity\",\n"
            + "                    \"VP_O_S\".\"objectSimilarity\"\n"
            + "                   FROM public.\"VP_O_S\") b USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "             JOIN ( SELECT \"VP_O_S\".\"PredicateURI\",\n"
            + "                    \"VP_O_S\".\"Context_Subject\",\n"
            + "                    \"VP_O_S\".\"Context_Object\",\n"
            + "                    \"VP_O_S\".\"VP\",\n"
            + "                        CASE\n"
            + "                            WHEN (\"VP_O_S\".\"VP\" IS NOT NULL) THEN count(\"VP_O_S\".\"VP\")\n"
            + "                            ELSE (1)::bigint\n"
            + "                        END AS verbcount\n"
            + "                   FROM public.\"VP_O_S\"\n"
            + "                  WHERE (\"VP_O_S\".\"VP\" IS NOT NULL)\n"
            + "                  GROUP BY \"VP_O_S\".\"PredicateURI\", \"VP_O_S\".\"Context_Subject\", \"VP_O_S\".\"Context_Object\", \"VP_O_S\".\"VP\") c USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"VP\"))\n"
            + "          ORDER BY a.\"PredicateURI\", a.\"Context_Subject\", a.\"Context_Object\", ((((c.verbcount * a.basecount))::double precision / (100)::double precision) + b.\"labelSimilarity\") DESC\n"
            + "        )\n"
            + " SELECT vp_conf.\"Context_Subject\",\n"
            + "    vp_conf.\"Context_Object\",\n"
            + "    vp_conf.\"PredicateURI\",\n"
            + "    vp_conf.\"VP\",\n"
            + "    vp_conf.conf,\n"
            + "    vp_conf.rank\n"
            + "   FROM vp_conf\n"
            + "  WHERE (vp_conf.rank = 1)\n"
            + "  ORDER BY vp_conf.\"PredicateURI\", vp_conf.\"Context_Subject\", vp_conf.\"Context_Object\", vp_conf.conf DESC;\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Confident_VP_O_S\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: VP_S_O; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"VP_S_O\" (\n"
            + "    \"PredicateURI\" character varying(200) NOT NULL,\n"
            + "    \"Context_Subject\" character varying(200) NOT NULL,\n"
            + "    \"Context_Object\" character varying(200) NOT NULL,\n"
            + "    \"VP\" character varying(200) NOT NULL,\n"
            + "    \"labelSimilarity\" double precision,\n"
            + "    confidence integer,\n"
            + "    \"baseVerb\" character varying(50),\n"
            + "    sentence character varying(5000) NOT NULL,\n"
            + "    \"subjectSimilarity\" double precision,\n"
            + "    \"objectSimilarity\" double precision\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"VP_S_O\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Confident_VP_S_O; Type: VIEW; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE OR REPLACE VIEW public.\"Confident_VP_S_O\" AS\n"
            + " WITH vp_conf AS (\n"
            + "         SELECT DISTINCT a.\"Context_Subject\",\n"
            + "            a.\"Context_Object\",\n"
            + "            a.\"PredicateURI\",\n"
            + "            b.\"VP\",\n"
            + "            (((c.verbcount * a.basecount))::double precision * b.\"labelSimilarity\") AS conf,\n"
            + "            row_number() OVER (PARTITION BY a.\"PredicateURI\", a.\"Context_Subject\", a.\"Context_Object\" ORDER BY (((c.verbcount * a.basecount))::double precision * b.\"labelSimilarity\") DESC) AS rank\n"
            + "           FROM ((( SELECT \"VP_S_O\".\"PredicateURI\",\n"
            + "                    \"VP_S_O\".\"Context_Subject\",\n"
            + "                    \"VP_S_O\".\"Context_Object\",\n"
            + "                    \"VP_S_O\".\"baseVerb\",\n"
            + "                        CASE\n"
            + "                            WHEN (\"VP_S_O\".\"baseVerb\" IS NOT NULL) THEN count(\"VP_S_O\".\"baseVerb\")\n"
            + "                            ELSE (1)::bigint\n"
            + "                        END AS basecount\n"
            + "                   FROM public.\"VP_S_O\"\n"
            + "                  GROUP BY \"VP_S_O\".\"PredicateURI\", \"VP_S_O\".\"Context_Subject\", \"VP_S_O\".\"Context_Object\", \"VP_S_O\".\"baseVerb\") a\n"
            + "             JOIN ( SELECT \"VP_S_O\".\"PredicateURI\",\n"
            + "                    \"VP_S_O\".\"Context_Subject\",\n"
            + "                    \"VP_S_O\".\"Context_Object\",\n"
            + "                    \"VP_S_O\".\"baseVerb\",\n"
            + "                    \"VP_S_O\".\"VP\",\n"
            + "                    \"VP_S_O\".\"labelSimilarity\",\n"
            + "                    \"VP_S_O\".\"subjectSimilarity\",\n"
            + "                    \"VP_S_O\".\"objectSimilarity\"\n"
            + "                   FROM public.\"VP_S_O\") b USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "             JOIN ( SELECT \"VP_S_O\".\"PredicateURI\",\n"
            + "                    \"VP_S_O\".\"Context_Subject\",\n"
            + "                    \"VP_S_O\".\"Context_Object\",\n"
            + "                    \"VP_S_O\".\"VP\",\n"
            + "                        CASE\n"
            + "                            WHEN (\"VP_S_O\".\"VP\" IS NOT NULL) THEN count(\"VP_S_O\".\"VP\")\n"
            + "                            ELSE (1)::bigint\n"
            + "                        END AS verbcount\n"
            + "                   FROM public.\"VP_S_O\"\n"
            + "                  GROUP BY \"VP_S_O\".\"PredicateURI\", \"VP_S_O\".\"Context_Subject\", \"VP_S_O\".\"Context_Object\", \"VP_S_O\".\"VP\") c USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"VP\"))\n"
            + "          ORDER BY a.\"PredicateURI\", a.\"Context_Subject\", a.\"Context_Object\", (((c.verbcount * a.basecount))::double precision * b.\"labelSimilarity\") DESC\n"
            + "        )\n"
            + " SELECT vp_conf.\"Context_Subject\",\n"
            + "    vp_conf.\"Context_Object\",\n"
            + "    vp_conf.\"PredicateURI\",\n"
            + "    vp_conf.\"VP\",\n"
            + "    vp_conf.conf,\n"
            + "    vp_conf.rank\n"
            + "   FROM vp_conf\n"
            + "  WHERE (vp_conf.rank = 1)\n"
            + "  ORDER BY vp_conf.\"PredicateURI\", vp_conf.\"Context_Subject\", vp_conf.\"Context_Object\", vp_conf.conf DESC;\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Confident_VP_S_O\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Context; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"Context\" (\n"
            + "    \"Cid\" integer NOT NULL,\n"
            + "    \"Predicate_URI\" character varying(1000) NOT NULL,\n"
            + "    \"S_type_URI\" character varying(1000) NOT NULL,\n"
            + "    \"O_type_URI\" character varying(1000) NOT NULL,\n"
            + "    \"Weight\" integer NOT NULL,\n"
            + "    \"Lock\" integer\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Context\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Predicates; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"Predicates\" (\n"
            + "    \"URI\" character varying(1000) NOT NULL,\n"
            + "    \"Label\" character varying(1000),\n"
            + "    \"Context_Subject\" character varying(200) NOT NULL,\n"
            + "    \"Context_Object\" character varying(200) NOT NULL,\n"
            + "    \"ContextWeight\" integer,\n"
            + "    processed character varying(10)\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Predicates\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Lexicon; Type: MATERIALIZED VIEW; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE MATERIALIZED VIEW IF NOT EXISTS public.\"Lexicon\" AS\n"
            + " SELECT DISTINCT \"PredicatesProjected\".\"PredicateURI\",\n"
            + "    \"PredicatesProjected\".\"Context_Subject\",\n"
            + "    \"PredicatesProjected\".\"Context_Object\",\n"
            + "    \"Confident_VP_S_O\".\"VP\" AS \"VP_S_O\",\n"
            + "    \"Confident_NP_S_O\".\"NP\" AS \"NP_S_O\",\n"
            + "    \"Confident_VP_O_S\".\"VP\" AS \"VP_O_S\",\n"
            + "    \"Confident_NP_O_S\".\"NP\" AS \"NP_O_S\"\n"
            + "   FROM ((((( SELECT \"Predicates\".\"URI\" AS \"PredicateURI\",\n"
            + "            \"Predicates\".\"Context_Subject\",\n"
            + "            \"Predicates\".\"Context_Object\"\n"
            + "           FROM public.\"Predicates\") \"PredicatesProjected\"\n"
            + "     LEFT JOIN ( SELECT \"Confident_VP_S_O_1\".\"Context_Subject\",\n"
            + "            \"Confident_VP_S_O_1\".\"Context_Object\",\n"
            + "            \"Confident_VP_S_O_1\".\"PredicateURI\",\n"
            + "            \"Confident_VP_S_O_1\".\"VP\",\n"
            + "            \"Confident_VP_S_O_1\".conf,\n"
            + "            \"Confident_VP_S_O_1\".rank\n"
            + "           FROM public.\"Confident_VP_S_O\" \"Confident_VP_S_O_1\"\n"
            + "          WHERE (\"Confident_VP_S_O_1\".conf >= (0.5)::double precision)) \"Confident_VP_S_O\" USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "     FULL JOIN ( SELECT \"Confident_NP_S_O_1\".\"PredicateURI\",\n"
            + "            \"Confident_NP_S_O_1\".\"Context_Subject\",\n"
            + "            \"Confident_NP_S_O_1\".\"Context_Object\",\n"
            + "            \"Confident_NP_S_O_1\".\"NP\",\n"
            + "            \"Confident_NP_S_O_1\".conf,\n"
            + "            \"Confident_NP_S_O_1\".weight\n"
            + "           FROM public.\"Confident_NP_S_O\" \"Confident_NP_S_O_1\"\n"
            + "          WHERE (\"Confident_NP_S_O_1\".conf >= (0.5)::double precision)) \"Confident_NP_S_O\" USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "     FULL JOIN ( SELECT \"Confident_VP_O_S_1\".\"Context_Subject\",\n"
            + "            \"Confident_VP_O_S_1\".\"Context_Object\",\n"
            + "            \"Confident_VP_O_S_1\".\"PredicateURI\",\n"
            + "            \"Confident_VP_O_S_1\".\"VP\",\n"
            + "            \"Confident_VP_O_S_1\".conf,\n"
            + "            \"Confident_VP_O_S_1\".rank\n"
            + "           FROM public.\"Confident_VP_O_S\" \"Confident_VP_O_S_1\"\n"
            + "          WHERE (\"Confident_VP_O_S_1\".conf >= (0.5)::double precision)) \"Confident_VP_O_S\" USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "     FULL JOIN ( SELECT \"Confident_NP_O_S_1\".\"PredicateURI\",\n"
            + "            \"Confident_NP_O_S_1\".\"Context_Subject\",\n"
            + "            \"Confident_NP_O_S_1\".\"Context_Object\",\n"
            + "            \"Confident_NP_O_S_1\".\"NP\",\n"
            + "            \"Confident_NP_O_S_1\".conf,\n"
            + "            \"Confident_NP_O_S_1\".weight\n"
            + "           FROM public.\"Confident_NP_O_S\" \"Confident_NP_O_S_1\"\n"
            + "          WHERE (\"Confident_NP_O_S_1\".conf >= (0.5)::double precision)) \"Confident_NP_O_S\" USING (\"PredicateURI\", \"Context_Subject\", \"Context_Object\"))\n"
            + "  WHERE (NOT ((\"Confident_VP_S_O\".\"VP\" IS NULL) AND (\"Confident_NP_S_O\".\"NP\" IS NULL) AND (\"Confident_VP_O_S\".\"VP\" IS NULL) AND (\"Confident_NP_O_S\".\"NP\" IS NULL)))\n"
            + "  WITH NO DATA;\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"Lexicon\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: NLP_Representation; Type: TABLE; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "CREATE TABLE IF NOT EXISTS public.\"NLP_Representation\" (\n"
            + "    \"URI\" character varying(200) NOT NULL,\n"
            + "    \"ContextSubject\" character varying(200) NOT NULL,\n"
            + "    \"ContextObject\" character varying(200) NOT NULL,\n"
            + "    \"TripleExampleSubject\" character varying(200),\n"
            + "    \"TripleExampleObject\" character varying(200),\n"
            + "    \"Sentence\" character varying(5000),\n"
            + "    \"Pattern\" character varying(5000),\n"
            + "    \"ReducedPattern\" character varying(2000),\n"
            + "    processed character varying(20)\n"
            + ");\n"
            + "\n"
            + "\n"
            + "ALTER TABLE public.\"NLP_Representation\" OWNER TO postgres;\n"
            + "\n"
            + "--\n"
            + "-- Name: Context Context_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"Context\"\n"
            + "    ADD CONSTRAINT \"Context_pkey\" PRIMARY KEY (\"Cid\");\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- Name: NP_O_S NP_O_S_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"NP_O_S\"\n"
            + "    ADD CONSTRAINT \"NP_O_S_pkey\" PRIMARY KEY (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"NP\", sentence);\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- Name: NP_S_O NP_S_O_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"NP_S_O\"\n"
            + "    ADD CONSTRAINT \"NP_S_O_pkey\" PRIMARY KEY (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"NP\", sentence);\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- Name: Predicates Predicates_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"Predicates\"\n"
            + "    ADD CONSTRAINT \"Predicates_pkey\" PRIMARY KEY (\"URI\", \"Context_Subject\", \"Context_Object\");\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- Name: VP_O_S VP_O_S_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"VP_O_S\"\n"
            + "    ADD CONSTRAINT \"VP_O_S_pkey\" PRIMARY KEY (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"VP\", sentence);\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- Name: VP_S_O VP_S_O_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres\n"
            + "--\n"
            + "\n"
            + "ALTER TABLE ONLY public.\"VP_S_O\"\n"
            + "    ADD CONSTRAINT \"VP_S_O_pkey\" PRIMARY KEY (\"PredicateURI\", \"Context_Subject\", \"Context_Object\", \"VP\", sentence);\n"
            + "\n"
            + "\n"
            + "--\n"
            + "-- PostgreSQL database dump complete\n"
            + "--\n"
            + "";

    public static void intialize(){
        try {
            Database.connect();
            PreparedStatement preparedStatement = Database.con.prepareStatement(createDatabaseQuery);
            preparedStatement.executeUpdate();
        } catch (SQLException ex) {
//            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
